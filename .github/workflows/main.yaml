name: Pipiple to deploy frontend app 

on:
  push:
    branches:
      - main
env:
  IMAGE_FRONTEND_NAME: frontend-image
  IMAGE_TAG: latest
  CONTAINER_NAME: frontend-container
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: ca-central-1

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code 
        run: | 
          git clone https://github.com/franklinfoko/devops-path.git
          ls -l

      - name: Build docker image
        run: | 
          docker build -t ${{env.IMAGE_FRONTEND_NAME}}:${{env.IMAGE_TAG}} devops-path/AWS/project/python-three-tier-app/frontend/
          docker images
      - name: Save Docker Image
        run: |
          echo "${{ secrets.MY_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          docker tag ${{env.IMAGE_FRONTEND_NAME}}:${{env.IMAGE_TAG}} ghcr.io/${{ github.repository_owner }}/${{env.IMAGE_FRONTEND_NAME}}:${{env.IMAGE_TAG}}
          docker push ghcr.io/${{ github.repository_owner }}/${{env.IMAGE_FRONTEND_NAME}}:${{env.IMAGE_TAG}}

  Test-image:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Test Image
        run: |
          echo Test acceptance
          echo "${{ secrets.MY_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          docker run -d --name ${{ env.CONTAINER_NAME }} ghcr.io/${{ github.repository_owner }}/${{env.IMAGE_FRONTEND_NAME}}:${{env.IMAGE_TAG}}
          sleep 5
          export IP_CONTAINER=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${{ env.CONTAINER_NAME }} )
          curl -I http://$IP_CONTAINER:5000

          docker rm -f ${{ env.CONTAINER_NAME }}

  Push-image:
    runs-on: ubuntu-latest
    needs: Test-image
    steps:
      - name: Push Image on ECR 
        run: |
          echo "${{ secrets.MY_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          docker pull ghcr.io/${{ github.repository_owner }}/${{env.IMAGE_FRONTEND_NAME}}:${{env.IMAGE_TAG}}
          docker tag ghcr.io/${{ github.repository_owner }}/${{env.IMAGE_FRONTEND_NAME}}:${{env.IMAGE_TAG}} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/my-ecr-repo:latest
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/my-ecr-repo:latest














      
          

   